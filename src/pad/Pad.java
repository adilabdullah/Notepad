
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.print.PrinterException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Document;
import javax.swing.text.Highlighter;
import javax.swing.text.Highlighter.HighlightPainter;
import javax.swing.text.JTextComponent;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Pad.java
 *
 * Created on Apr 16, 2014, 9:45:18 PM
 */
/**
 *
 * @author Adil
 */
public class Pad extends javax.swing.JFrame {
private Color color;
private Cursor curso;int h=11,l=0,d;
//private static final String[] fonts={"Font.BOLD","Font.ITALIC","Font.BOLD+Font.BOLD","Font.PLAIN"};
//private static final String[] family={"Dialog","SansSerif","Serif","Monospaced","DialogInput","Ariel"};
File files;
private final String pw="adil";
/** Creates new form Pad */
    public Pad() {
        
        initComponents();
   save.setEnabled(false);
jPanel1.setVisible(true);
pnel.setVisible(true);
//   Pad pe=new Pad();
  // pe.setEnabled(false);
    }
    class MyHighlightPainter extends DefaultHighlighter.DefaultHighlightPainter{
    public MyHighlightPainter(Color color){
    super(color);
    }
    }
    Highlighter.HighlightPainter myHighlightPainter=new MyHighlightPainter(Color.red);
    public void removeHighlights(JTextComponent textComp)
    {
    Highlighter hilite=textComp.getHighlighter();
    Highlighter.Highlight hilites[]=hilite.getHighlights();
    for(int i=0;i<hilites.length;i++){
    if(hilites[i].getPainter() instanceof MyHighlightPainter)
    {
    hilite.removeHighlight(hilites[i]);
    }
    }
    }
    public void highligh(JTextComponent textComp,String pattern)
    {
    removeHighlights(textComp);
        //MyHighlightPainter hil=new MyHighlightPainter(Color.red);
        try{
    Highlighter hilite=textComp.getHighlighter();
            Document doc=textComp.getDocument();
            String text=doc.getText(0,doc.getLength());
            int pos=0;
            while((pos=text.toUpperCase().indexOf(pattern.toUpperCase(),pos))>=0){
            hilite.addHighlight(pos,pos+pattern.length(),myHighlightPainter);
                    pos+=pattern.length();
            }
    }
    catch(Exception e)
    {
    }
    }
    public void highlighttext(JTextComponent textComp)
    {
    Highlighter hilite=textComp.getHighlighter();
    String sn,se;    
    sn=area.getSelectedText();
    for(int e=0;e<=sn.length();e++)
    {
      try {
        hilite.addHighlight(e,e, myHighlightPainter);
      } catch (Exception ex) {
     }
    }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialog = new javax.swing.JDialog();
        frequency = new javax.swing.JLabel();
        charac = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        replac = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        word = new javax.swing.JTextField();
        character = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        searle = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        stext = new javax.swing.JTextField();
        sear = new javax.swing.JButton();
        popup = new javax.swing.JPopupMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        login = new javax.swing.JFrame();
        user = new javax.swing.JTextField();
        password = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        font = new javax.swing.JComboBox();
        style = new javax.swing.JComboBox();
        size = new javax.swing.JComboBox();
        background = new javax.swing.JButton();
        foreground = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        write = new javax.swing.JButton();
        read = new javax.swing.JButton();
        freq = new javax.swing.JButton();
        ul = new javax.swing.JButton();
        replace = new javax.swing.JButton();
        search = new javax.swing.JButton();
        print = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        ssa = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        pnel = new javax.swing.JPanel();
        vowels = new javax.swing.JLabel();
        spaces = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        words = new javax.swing.JLabel();
        line = new javax.swing.JLabel();
        jScrollBar1 = new javax.swing.JScrollBar();
        lbb = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        saveas = new javax.swing.JMenuItem();
        save = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();

        dialog.getContentPane().setLayout(null);

        frequency.setFont(new java.awt.Font("SansSerif", 1, 18));
        frequency.setText("Character");
        dialog.getContentPane().add(frequency);
        frequency.setBounds(120, 190, 240, 30);

        charac.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                characKeyTyped(evt);
            }
        });
        dialog.getContentPane().add(charac);
        charac.setBounds(190, 70, 180, 30);

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 18));
        jLabel2.setText("Character");
        dialog.getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 70, 130, 30);

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18));
        jLabel1.setText("Word");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 18));
        jLabel3.setText("Character");

        jButton4.setFont(new java.awt.Font("SansSerif", 1, 18));
        jButton4.setText("Replace");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout replacLayout = new javax.swing.GroupLayout(replac.getContentPane());
        replac.getContentPane().setLayout(replacLayout);
        replacLayout.setHorizontalGroup(
            replacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(replacLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(replacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(replacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, replacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(character, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                        .addComponent(word, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)))
                .addContainerGap(227, Short.MAX_VALUE))
        );
        replacLayout.setVerticalGroup(
            replacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(replacLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(replacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(word, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(replacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(character, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(160, Short.MAX_VALUE))
        );

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 18));
        jLabel4.setText("Enter Word");

        sear.setFont(new java.awt.Font("SansSerif", 1, 18));
        sear.setText("Search");
        sear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searleLayout = new javax.swing.GroupLayout(searle.getContentPane());
        searle.getContentPane().setLayout(searleLayout);
        searleLayout.setHorizontalGroup(
            searleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searleLayout.createSequentialGroup()
                .addGroup(searleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searleLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(stext, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(searleLayout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addComponent(sear, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        searleLayout.setVerticalGroup(
            searleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searleLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(searleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stext, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addComponent(sear, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(115, Short.MAX_VALUE))
        );

        jMenuItem2.setText("Background Image");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        popup.add(jMenuItem2);

        jMenuItem4.setText("Beep");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        popup.add(jMenuItem4);

        jMenuItem5.setText("Exit");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        popup.add(jMenuItem5);

        login.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        login.setTitle("Login Panel");

        user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userActionPerformed(evt);
            }
        });

        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });
        password.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                passwordKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout loginLayout = new javax.swing.GroupLayout(login.getContentPane());
        login.getContentPane().setLayout(loginLayout);
        loginLayout.setHorizontalGroup(
            loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginLayout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addGroup(loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(password, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                    .addComponent(user, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        loginLayout.setVerticalGroup(
            loginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginLayout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(173, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TextPad");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(-4144960,true));

        font.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ariel", "Monospace", "Hebrew", "Sinhali", "Serif", "Consolas", "Corbel", "Candara", "Calibri", "Gautami", "Cambria", "Garamond", "Georgia", "Constantia", "Century", "Latha", "Mangal", "Impact", "Raavi", "Tahoma", "Tunga", "Sans Serif" }));
        font.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                fontItemStateChanged(evt);
            }
        });
        font.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fontActionPerformed(evt);
            }
        });

        style.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Plain", "Italic", "Bold", "Bold+Italic" }));
        style.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                styleItemStateChanged(evt);
            }
        });
        style.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                styleActionPerformed(evt);
            }
        });

        size.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "8", "10", "12", "14", "16", "18", "20", "22", "24", "26", "28", "30", "32", "34", "36", "38", "40", "42", "44", "46", "48", "50", "52", "54", "56", "58", "60", " " }));
        size.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sizeItemStateChanged(evt);
            }
        });
        size.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeActionPerformed(evt);
            }
        });

        background.setText("BackGround");
        background.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backgroundActionPerformed(evt);
            }
        });

        foreground.setText("ForeGround");
        foreground.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foregroundActionPerformed(evt);
            }
        });

        jButton1.setText("<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("=");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText(">");

        write.setText("Write");
        write.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeActionPerformed(evt);
            }
        });

        read.setText("Read");
        read.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readActionPerformed(evt);
            }
        });

        freq.setText("Freq");
        freq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freqActionPerformed(evt);
            }
        });

        ul.setText("U");
        ul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ulActionPerformed(evt);
            }
        });

        replace.setText("Replace");
        replace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replaceActionPerformed(evt);
            }
        });

        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("SansSerif", 1, 18));
        jButton5.setText("A");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        ssa.setFont(new java.awt.Font("SansSerif", 1, 12));
        ssa.setText("A");
        ssa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ssaActionPerformed(evt);
            }
        });

        jButton6.setText("Highlight");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(read))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6)
                    .addComponent(ssa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(write)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(background)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(foreground)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(freq, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(ul)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(replace)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(font, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(style, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(690, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(font, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(style, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(size, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ssa, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(background)
                    .addComponent(write)
                    .addComponent(read)
                    .addComponent(foreground)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(freq)
                    .addComponent(ul)
                    .addComponent(replace)
                    .addComponent(print)
                    .addComponent(jButton6))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        vowels.setFont(new java.awt.Font("SansSerif", 1, 18));
        vowels.setText("jLabel1");

        spaces.setFont(new java.awt.Font("SansSerif", 1, 18));
        spaces.setText("jLabel1");

        area.setColumns(20);
        area.setRows(5);
        area.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                areaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                areaKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(area);

        words.setFont(new java.awt.Font("SansSerif", 1, 18));
        words.setText("jLabel1");

        line.setFont(new java.awt.Font("SansSerif", 1, 18));
        line.setText("jLabel1");

        javax.swing.GroupLayout pnelLayout = new javax.swing.GroupLayout(pnel);
        pnel.setLayout(pnelLayout);
        pnelLayout.setHorizontalGroup(
            pnelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnelLayout.createSequentialGroup()
                .addGroup(pnelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(words, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(vowels, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spaces, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(180, 180, 180)
                        .addComponent(line, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1487, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58))
            .addGroup(pnelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lbb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1590, Short.MAX_VALUE))
        );
        pnelLayout.setVerticalGroup(
            pnelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnelLayout.createSequentialGroup()
                        .addComponent(jScrollBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pnelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pnelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(words, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(vowels, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(line, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spaces, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(124, 124, 124))))
            .addGroup(pnelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnelLayout.createSequentialGroup()
                    .addComponent(lbb, javax.swing.GroupLayout.DEFAULT_SIZE, 898, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jMenu1.setText("File");

        saveas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        saveas.setText("Save As");
        saveas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveasActionPerformed(evt);
            }
        });
        jMenu1.add(saveas);

        save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        jMenu1.add(save);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Import");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("About");
        jMenu3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu3ActionPerformed(evt);
            }
        });

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem6.setText("About Developers");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(pnel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
System.exit(1);
}//GEN-LAST:event_jMenuItem1ActionPerformed

private void fontActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fontActionPerformed
//if(style.getSelectedItem()=="Bold")
//{
//area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD,(Integer)size.getSelectedItem()));
//}
//else if(style.getSelectedItem()=="Italic")
//{
//area.setFont(new Font((String)font.getSelectedItem(),Font.ITALIC,(Integer)size.getSelectedItem()));
//}
//else if(style.getSelectedItem()=="Plain")
//{
//area.setFont(new Font((String)font.getSelectedItem(),Font.PLAIN,(Integer)size.getSelectedItem()));
//}
//else if(style.getSelectedItem()=="Bold+Italic")
//{
//area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD+Font.ITALIC,(Integer)size.getSelectedItem()));
//}
//area.setFont(new Font((String)font.getSelectedItem(),style.getSelectedObjects(),(Integer)size.getSelectedItem()));

}//GEN-LAST:event_fontActionPerformed

private void backgroundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backgroundActionPerformed
color=JColorChooser.showDialog(this,"Choose A Color",color);
if(color==null){
area.setBackground(Color.WHITE);
}
area.setBackground(color);
}//GEN-LAST:event_backgroundActionPerformed

private void styleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_styleActionPerformed
//if(style.getSelectedItem()=="Bold")
//{
//area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD,(Integer)size.getSelectedItem()));
//}
//else if(style.getSelectedItem()=="Italic")
//{
//area.setFont(new Font((String)font.getSelectedItem(),Font.ITALIC,(Integer)size.getSelectedItem()));
//}
//else if(style.getSelectedItem()=="Plain")
//{
//area.setFont(new Font((String)font.getSelectedItem(),Font.PLAIN,(Integer)size.getSelectedItem()));
//}
//else if(style.getSelectedItem()=="Bold+Italic")
//{
//area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD+Font.ITALIC,(Integer)size.getSelectedItem()));
//}
}//GEN-LAST:event_styleActionPerformed

private void foregroundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foregroundActionPerformed
String sh;
    color=JColorChooser.showDialog(this,"Choose A Color",color);
if(color==null){
area.setForeground(Color.BLACK);
}
//area.setForeground(color);
sh=area.getSelectedText();
area.setSelectionColor(color);
//area.setForeground(color);
}//GEN-LAST:event_foregroundActionPerformed

private void sizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeActionPerformed
////if(style.getSelectedItem()=="Bold")
////{
////area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD,(Integer)size.getSelectedItem()));
////}
////else if(style.getSelectedItem()=="Italic")
////{
////area.setFont(new Font((String)font.getSelectedItem(),Font.ITALIC,(Integer)size.getSelectedItem()));
////}
////else if(style.getSelectedItem()=="Plain")
////{
////area.setFont(new Font((String)font.getSelectedItem(),Font.PLAIN,(Integer)size.getSelectedItem()));
////}
////else if(style.getSelectedItem()=="Bold+Italic")
////{
////area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD+Font.ITALIC,(Integer)size.getSelectedItem()));
////}
//area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD,(Integer)size.getSelectedItem()));
}//GEN-LAST:event_sizeActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
area.setCursor(curso);
}//GEN-LAST:event_jButton1ActionPerformed

private void fontItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_fontItemStateChanged
if(style.getSelectedItem()=="Bold")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD,Integer.parseInt((String)size.getSelectedItem())));
}
else if(style.getSelectedItem()=="Italic")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.ITALIC,Integer.parseInt((String)size.getSelectedItem())));
}
else if(style.getSelectedItem()=="Plain")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.PLAIN,Integer.parseInt((String)size.getSelectedItem())));
}
else if(style.getSelectedItem()=="Bold+Italic")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD+Font.ITALIC,Integer.parseInt((String)size.getSelectedItem())));
}
}//GEN-LAST:event_fontItemStateChanged

private void sizeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sizeItemStateChanged
if(style.getSelectedItem()=="Bold")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD,Integer.parseInt((String)size.getSelectedItem())));
}
else if(style.getSelectedItem()=="Italic")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.ITALIC,Integer.parseInt((String)size.getSelectedItem())));
}
else if(style.getSelectedItem()=="Plain")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.PLAIN,Integer.parseInt((String)size.getSelectedItem())));
}
else if(style.getSelectedItem()=="Bold+Italic")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD+Font.ITALIC,Integer.parseInt((String)size.getSelectedItem())));
}
}//GEN-LAST:event_sizeItemStateChanged

private void styleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_styleItemStateChanged
if(style.getSelectedItem()=="Bold")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD,Integer.parseInt((String)size.getSelectedItem())));
}
else if(style.getSelectedItem()=="Italic")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.ITALIC,Integer.parseInt((String)size.getSelectedItem())));
}
else if(style.getSelectedItem()=="Plain")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.PLAIN,Integer.parseInt((String)size.getSelectedItem())));
}
else if(style.getSelectedItem()=="Bold+Italic")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD+Font.ITALIC,Integer.parseInt((String)size.getSelectedItem())));
}
}//GEN-LAST:event_styleItemStateChanged

private void writeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeActionPerformed
////int result = 0;
    try{
//JFileChooser filech=new JFileChooser();
//if(result==JFileChooser.CANCEL_OPTION){
//System.exit(1);
//}
//if(JFileChooser)
    FileWriter writer=new FileWriter("C:\\Documents and Settings\\Adil\\Desktop\\Textpad.txt");
BufferedWriter bw=new BufferedWriter(writer);
area.write(bw);
bw.close();
area.setText("");
area.requestFocus();
}
catch(Exception e){
JOptionPane.showMessageDialog(null,"Canoot Write To file"+e.getMessage());
}
}//GEN-LAST:event_writeActionPerformed

private void readActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readActionPerformed
JFileChooser filech=new JFileChooser();
filech.showOpenDialog(null);
File file=filech.getSelectedFile();
String fname=file.getAbsolutePath();
try{
FileReader reader=new FileReader(fname);
BufferedReader buff=new BufferedReader(reader);
area.read(buff,null);
buff.close();
area.requestFocus();
}
catch(Exception e){
JOptionPane.showMessageDialog(null,"Unable To Open"+e.getMessage());
}
}//GEN-LAST:event_readActionPerformed

private void saveasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveasActionPerformed
save.setEnabled(true);
    JFileChooser file=new JFileChooser();
file.showSaveDialog(null);
try{
FileWriter writes=new FileWriter(file.getSelectedFile());
BufferedWriter bw=new BufferedWriter(writes);
area.write(bw);
bw.close();
area.requestFocus();
files=file.getSelectedFile();}
catch(Exception e){
JOptionPane.showMessageDialog(null,"Canoot Write To file"+e.getMessage());
}
}//GEN-LAST:event_saveasActionPerformed

private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
   
    JFileChooser filech=new JFileChooser();
filech.showOpenDialog(null);
File file=filech.getSelectedFile();
String fname=file.getAbsolutePath();
try{
FileReader reader=new FileReader(fname);
BufferedReader buff=new BufferedReader(reader);
area.read(buff,null);
buff.close();
area.requestFocus();
}
catch(Exception e){
JOptionPane.showMessageDialog(null,"Unable To Open"+e.getMessage());
}
}//GEN-LAST:event_jMenuItem3ActionPerformed

private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
 try{
    FileWriter writer=new FileWriter(files.getAbsolutePath());
BufferedWriter bw=new BufferedWriter(writer);
area.write(bw);
bw.close();
area.requestFocus();
}
catch(Exception e){
JOptionPane.showMessageDialog(null,"Canoot Write To file"+e.getMessage());
}
}//GEN-LAST:event_saveActionPerformed

private void freqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freqActionPerformed

    dialog.setVisible(true);
}//GEN-LAST:event_freqActionPerformed

private void ulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ulActionPerformed
if(ul.getText()=="U")
{ul.setText("L");
area.setText(area.getText().toLowerCase());
}
else{ul.setText("U");
area.setText(area.getText().toUpperCase());
}
}//GEN-LAST:event_ulActionPerformed

private void characKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_characKeyTyped
char ch=evt.getKeyChar();
    int c=0;
if(ch==KeyEvent.VK_ENTER){
String sn=area.getText();
String cc=charac.getText();    
char[] cs=cc.toCharArray();
char[] chs=sn.toCharArray();
    for(int i=0;i<=chs.length;i++)
    {
    if(cs[0]==chs[i])
    {
    ++c;
    }
    }
frequency.setText(" "+c);}
}//GEN-LAST:event_characKeyTyped

private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
try{
    area.setText(area.getText().replace(word.getText(),character.getText()));
}
catch(Exception ex){
JOptionPane.showMessageDialog(null,"Error Occur");
}
}//GEN-LAST:event_jButton4ActionPerformed

private void replaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replaceActionPerformed
replac.setVisible(true);
}//GEN-LAST:event_replaceActionPerformed

private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
searle.setVisible(true);
searle.setSize(200,200);
}//GEN-LAST:event_searchActionPerformed

private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
try{
boolean complete=area.print();
if(complete){
JOptionPane.showMessageDialog(null,"Done Printing","Information",JOptionPane.INFORMATION_MESSAGE);
}else{
JOptionPane.showMessageDialog(null,"Printing","Printer",JOptionPane.ERROR_MESSAGE);
}
}
catch(PrinterException e){
JOptionPane.showMessageDialog(null, e);
}
}//GEN-LAST:event_printActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//area.setAlignmentX();
    //area.setAlignmentX().RIGHT_ALIGNMENT;
//display.setAlignmentX(RIGHT_ALIGNMENT);
}//GEN-LAST:event_jButton2ActionPerformed

private void searActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searActionPerformed
highligh(area,stext.getText());
}//GEN-LAST:event_searActionPerformed

private void ssaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ssaActionPerformed
h--;
    if(style.getSelectedItem()=="Bold")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD,h));
}
else if(style.getSelectedItem()=="Italic")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.ITALIC,h));
}
else if(style.getSelectedItem()=="Plain")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.PLAIN,h));
}
else if(style.getSelectedItem()=="Bold+Italic")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD+Font.ITALIC,h));
}

}//GEN-LAST:event_ssaActionPerformed

private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
h++;
    if(style.getSelectedItem()=="Bold")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD,h));
}
else if(style.getSelectedItem()=="Italic")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.ITALIC,h));
}
else if(style.getSelectedItem()=="Plain")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.PLAIN,h));
}
else if(style.getSelectedItem()=="Bold+Italic")
{
area.setFont(new Font((String)font.getSelectedItem(),Font.BOLD+Font.ITALIC,h));
}
}//GEN-LAST:event_jButton5ActionPerformed

private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
highlighttext(area);
}//GEN-LAST:event_jButton6ActionPerformed

private void areaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_areaKeyTyped
//area.setFont(new Font(font.getSelectedItem(),style.getSelectedItem(),size.getSelectedItem()));
}//GEN-LAST:event_areaKeyTyped

private void areaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_areaKeyReleased
int spe=0;
    int wCount =1+area.getText().length() - area.getText().replaceAll(" ","").length();
int vows = 0,cons = 0,spa=0,lno=0;
words.setText("Words:"+wCount);
String sq=area.getText();
char[] ch=new char[100];
for(int i = 0; i < sq.length(); i ++)
{
ch = sq.toCharArray();
if(ch[i] == 'a' || ch[i] == 'A' || ch[i] == 'e' || ch[i] == 'E' || ch[i] == 'i' || 
ch[i] == 'I' || ch[i] == 'o' || ch[i] == 'O' || ch[i] == 'u' || ch[i] == 'U')
{vows ++;}
else if(Character.isWhitespace(ch[i])){
spa++;
}
else{
cons ++;}
lno=area.getLineCount();
vowels.setText("Vowels+Consonent:"+vows+"+"+cons+"="+(vows+cons));          
spaces.setText("Spaces:"+spa);
line.setText("Line:"+lno);
}
}//GEN-LAST:event_areaKeyReleased

private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
if(evt.isPopupTrigger())
{
popup.show(this,evt.getX(),evt.getY());
}
}//GEN-LAST:event_formMouseReleased

private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
    JFileChooser filech=new JFileChooser();
filech.showOpenDialog(null);
File file=filech.getSelectedFile();
String fname=file.getAbsolutePath();
Icon bug=new ImageIcon(fname);
lbb.setIcon(bug);
}//GEN-LAST:event_jMenuItem2ActionPerformed

private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
Toolkit.getDefaultToolkit().beep();
}//GEN-LAST:event_jMenuItem4ActionPerformed

private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
System.exit(1);
}//GEN-LAST:event_jMenuItem5ActionPerformed

private void passwordKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_passwordKeyReleased
//int cou=0;
//    String sl=password.getText();
//if(sl.equalsIgnoreCase(pw))
//{
//JOptionPane.showMessageDialog(null,"Welcome "+user.getText());
//login.dispose();
//}
//else
//{
//cou++;
//    JOptionPane.showMessageDialog(null,"Your Password Is Incorrect");
//if(cou==3){
//JOptionPane.showMessageDialog(null,"Sorry Your Program Is Closed");
//System.exit(1);
//}
//}
}//GEN-LAST:event_passwordKeyReleased

private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_passwordActionPerformed

private void userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_userActionPerformed

private void jMenu3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu3ActionPerformed

}//GEN-LAST:event_jMenu3ActionPerformed

private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
try{
Runtime.getRuntime().exec("rundll23 url.dll,FileProtocolHandler "+"C:\\Documents and Settings\\Adil\\My Documents\\Downloads\\Core.pdf");
        }
catch(Exception e)
{JOptionPane.showMessageDialog(null,"Error"+e.getMessage());
}
}//GEN-LAST:event_jMenuItem6ActionPerformed

public int countLines(int width) {

        FontMetrics fontMetrics = this.getFontMetrics(this.getFont());
        String text = area.getText();
        String[] tokens = text.split(" ");
        String currentLine = "";
        boolean beginningOfLine = true;
        int noLines = 1;

        for (int i = 0; i < tokens.length; i++) {
            if (beginningOfLine) {
                beginningOfLine = false;
                currentLine = currentLine + tokens[i];
            } else {
                currentLine = currentLine + " " + tokens[i];
            }
            if (fontMetrics.stringWidth(currentLine) > width) {
                currentLine = "";
                beginningOfLine = true;
                noLines++;
            }
        }
        System.out.print("there are " + noLines + "lines" + System.getProperty("line.separator"));
        return noLines;
}    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Pad().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea area;
    private javax.swing.JButton background;
    private javax.swing.JTextField charac;
    private javax.swing.JTextField character;
    private javax.swing.JDialog dialog;
    private javax.swing.JComboBox font;
    private javax.swing.JButton foreground;
    private javax.swing.JButton freq;
    private javax.swing.JLabel frequency;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbb;
    private javax.swing.JLabel line;
    private javax.swing.JFrame login;
    private javax.swing.JPasswordField password;
    private javax.swing.JPanel pnel;
    private javax.swing.JPopupMenu popup;
    private javax.swing.JButton print;
    private javax.swing.JButton read;
    private javax.swing.JDialog replac;
    private javax.swing.JButton replace;
    private javax.swing.JMenuItem save;
    private javax.swing.JMenuItem saveas;
    private javax.swing.JButton sear;
    private javax.swing.JButton search;
    private javax.swing.JDialog searle;
    private javax.swing.JComboBox size;
    private javax.swing.JLabel spaces;
    private javax.swing.JButton ssa;
    private javax.swing.JTextField stext;
    private javax.swing.JComboBox style;
    private javax.swing.JButton ul;
    private javax.swing.JTextField user;
    private javax.swing.JLabel vowels;
    private javax.swing.JTextField word;
    private javax.swing.JLabel words;
    private javax.swing.JButton write;
    // End of variables declaration//GEN-END:variables
}
